[tox]
envlist = py{311},flake8,pylint,mypy,coverage

[testenv:flake8]
deps = flake8
commands = flake8 --config=tox.ini

[testenv:pylint]
deps =
    pylint
    -rrequirements.txt
commands =
    pylint src --rcfile=tox.ini
    pylint tests --rcfile=tox.ini --disable=C0114,C0115,C0116,W0212

[testenv:mypy]
deps =
    mypy
    -rrequirements.txt
commands =
    mypy src --install-types --non-interactive --config-file=tox.ini --disallow-untyped-defs
    mypy tests --config-file=tox.ini

[testenv:py{311}]
setenv =
    COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
deps =
    pytest
    coverage
    -rrequirements.txt
commands =
    coverage run --source={envsitepackagesdir}/world_parser --rcfile=tox.ini -m pytest

[testenv:coverage]
setenv =
    COVERAGE_FILE = {toxworkdir}/.coverage
deps =
    coverage
commands =
    coverage combine --rcfile=tox.ini
    coverage report --rcfile=tox.ini --fail-under=80
    coverage html --rcfile=tox.ini -d {toxworkdir}/coverage_report

;===================================================================================================
;                              Configuration
;===================================================================================================

[mypy]
disallow_any_generics = true
disallow_any_unimported = false
disallow_subclassing_any = false
disallow_untyped_calls = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_return_any = true

[flake8]
max-line-length=100
exclude =
    .git,
    __pycache__,
    docs/,
    out,
    venv,
    *.egg-info
    .tox

[pylint.'MESSAGES CONTROL']
; during early implementation these are somewhat annoying
disable = too-few-public-methods,fixme
no-docstring-rgx=^test_|^_

[aliases]
test=pytest

[tool:pytest]
log_cli = False
norecursedirs = .* doc out res routing *.egg-info venv
testpaths = ./tests

[coverage:run]
omit =
    */main.py
    *__init__*

[coverage:report]
omit =
    */main.py
    *__init__*
